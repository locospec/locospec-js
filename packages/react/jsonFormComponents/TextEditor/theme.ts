/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

import type { EditorThemeClasses } from "lexical";
const theme: EditorThemeClasses = {
  characterLimit: "text_editor__characterLimit",
  code: "text_editor__code",
  codeHighlight: {
    atrule: "text_editor__tokenAttr",
    attr: "text_editor__tokenAttr",
    boolean: "text_editor__tokenProperty",
    builtin: "text_editor__tokenSelector",
    cdata: "text_editor__tokenComment",
    char: "text_editor__tokenSelector",
    class: "text_editor__tokenFunction",
    "class-name": "text_editor__tokenFunction",
    comment: "text_editor__tokenComment",
    constant: "text_editor__tokenProperty",
    deleted: "text_editor__tokenProperty",
    doctype: "text_editor__tokenComment",
    entity: "text_editor__tokenOperator",
    function: "text_editor__tokenFunction",
    important: "text_editor__tokenVariable",
    inserted: "text_editor__tokenSelector",
    keyword: "text_editor__tokenAttr",
    namespace: "text_editor__tokenVariable",
    number: "text_editor__tokenProperty",
    operator: "text_editor__tokenOperator",
    prolog: "text_editor__tokenComment",
    property: "text_editor__tokenProperty",
    punctuation: "text_editor__tokenPunctuation",
    regex: "text_editor__tokenVariable",
    selector: "text_editor__tokenSelector",
    string: "text_editor__tokenSelector",
    symbol: "text_editor__tokenProperty",
    tag: "text_editor__tokenProperty",
    url: "text_editor__tokenOperator",
    variable: "text_editor__tokenVariable",
  },
  embedBlock: {
    base: "text_editor__embedBlock",
    focus: "text_editor__embedBlockFocus",
  },
  hashtag: "text_editor__hashtag",
  heading: {
    h1: "text_editor__h1",
    h2: "text_editor__h2",
    h3: "text_editor__h3",
    h4: "text_editor__h4",
    h5: "text_editor__h5",
    h6: "text_editor__h6",
  },
  image: "tex_editor_image",
  link: "text_editor__link",
  list: {
    listitem: "text_editor__listItem",
    listitemChecked: "text_editor__listItemChecked",
    listitemUnchecked: "text_editor__listItemUnchecked",
    nested: {
      listitem: "text_editor__nestedListItem",
    },
    olDepth: [
      "text_editor__ol1",
      "text_editor__ol2",
      "text_editor__ol3",
      "text_editor__ol4",
      "text_editor__ol5",
    ],
    ul: "text_editor__ul",
  },
  ltr: "text_editor__ltr",
  mark: "text_editor__mark",
  markOverlap: "text_editor__markOverlap",
  paragraph: "text_editor__paragraph",
  quote: "text_editor__quote",
  rtl: "text_editor__rtl",
  table: "text_editor__table not-prose",
  tableAddColumns: "text_editor__tableAddColumns",
  tableAddRows: "text_editor__tableAddRows",
  tableCell: "text_editor__tableCell",
  tableCellActionButton: "text_editor__tableCellActionButton",
  tableCellActionButtonContainer: "text_editor__tableCellActionButtonContainer",
  tableCellEditing: "text_editor__tableCellEditing",
  tableCellHeader: "text_editor__tableCellHeader",
  tableCellPrimarySelected: "text_editor__tableCellPrimarySelected",
  tableCellResizer: "text_editor__tableCellResizer",
  tableCellSelected: "text_editor__tableCellSelected",
  tableCellSortedIndicator: "text_editor__tableCellSortedIndicator",
  tableResizeRuler: "text_editor__tableCellResizeRuler",
  tableSelected: "text_editor__tableSelected",
  text: {
    bold: "text_editor__textBold",
    code: "text_editor__textCode",
    italic: "text_editor__textItalic",
    strikethrough: "text_editor__textStrikethrough",
    subscript: "text_editor__textSubscript",
    superscript: "text_editor__textSuperscript",
    underline: "text_editor__textUnderline",
    underlineStrikethrough: "text_editor__textUnderlineStrikethrough",
  },
};

export default theme;
